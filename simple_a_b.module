<?php

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function simple_a_b_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {

    case 'simple_a_b.view_tests':
      $output = '<p>' . t('This is a list of available A/B tests. You can add, edit and remove these tests.', []) . '</p>';
      return $output;

    case 'simple_a_b.config':
      $output = '<p>' . t('The global config for Simple A/B, here you can configure the way you would like it to run.', []) . '</p>';
      return $output;

  }
}


/**
 * Implements hook_views_data().
 */
function simple_a_b_views_data() {

  // create data structure so views api knows what to look for
  $data['simple_a_b_tests']['table'] = [
    'group' => t('Simple A/B tests'),
    'provider' => 'simple_a_b',
    'base' => [
      'field' => 'tid',
      'title' => t('Simple A/B tests'),
      'help' => t('Simple A/B tests table contains data related to current A/B tests.'),
      'weight' => -10,
    ],
  ];

  // show that there is a join between created by and users data
  $data['simple_a_b_tests']['table']['join'] = [
    'users_field_data' => [
      'left_field' => 'uid',
      'field' => 'created_by',
    ],
  ];

  // show that there is a join between updated by and users data
  $data['simple_a_b_tests']['table']['join'] = [
    'users_field_data' => [
      'left_field' => 'uid',
      'field' => 'updated_by',
    ],
  ];

  // test id
  $data['simple_a_b_tests']['tid'] = [
    'title' => t('Id'),
    'help' => t('The id that created the test'),
    'field' => [
      'id' => 'numeric',
    ],
    'sort' => [
      'id' => 'standard',
    ],
    'filter' => [
      'id' => 'numeric',
    ],
    'argument' => [
      'id' => 'numeric',
    ],
  ];

  // test name
  $data['simple_a_b_tests']['name'] = [
    'title' => t('Name'),
    'help' => t('Name of the test'),
    'field' => [
      'id' => 'standard',
    ],
    'sort' => [
      'id' => 'standard',
    ],
    'filter' => [
      'id' => 'string',
    ],
    'argument' => [
      'id' => 'string',
    ],
  ];

  // test description
  $data['simple_a_b_tests']['description'] = [
    'title' => t('Description'),
    'help' => t('Description of the test'),
    'field' => [
      'id' => 'standard',
    ],
    'sort' => [
      'id' => 'standard',
    ],
    'filter' => [
      'id' => 'string',
    ],
    'argument' => [
      'id' => 'string',
    ],
  ];

  // test enabled
  $data['simple_a_b_tests']['enabled'] = [
    'title' => t('Enabled'),
    'help' => t('Flag for the state of the test'),
    'field' => [
      'id' => 'boolean',
    ],
    'sort' => [
      'id' => 'standard',
    ],
    'filter' => [
      'id' => 'boolean',
      'label' => t('Enabled'),
      'type' => 'yes-no',
      'use_equal' => TRUE,
    ],
  ];

  // test type
  $data['simple_a_b_tests']['type'] = [
    'title' => t('Type'),
    'help' => t('Type of the test'),
    'field' => [
      'id' => 'standard',
    ],
    'sort' => [
      'id' => 'standard',
    ],
    'filter' => [
      'id' => 'string',
    ],
    'argument' => [
      'id' => 'string',
    ],
  ];

  // entity id
  $data['simple_a_b_tests']['eid'] = [
    'title' => t('Entity id'),
    'help' => t('The id of the entity this test relates too'),
    'field' => [
      'id' => 'numeric',
    ],
    'sort' => [
      'id' => 'standard',
    ],
    'filter' => [
      'id' => 'numeric',
    ],
    'argument' => [
      'id' => 'numeric',
    ],
  ];

  // test created by
  $data['simple_a_b_tests']['created_by'] = [
    'title' => t('Created by'),
    'help' => t('The user that created the test'),
    'field' => [
      'id' => 'numeric',
    ],
    'sort' => [
      'id' => 'standard',
    ],
    'filter' => [
      'id' => 'numeric',
    ],
    'argument' => [
      'id' => 'numeric',
    ],
    'relationship' => [
      'title' => t('Created by user'),
      'help' => t('The user that first created the test'),
      'base' => 'users_field_data',
      'base field' => 'uid',
      'id' => 'standard',
    ],
  ];

  // test created time
  $data['simple_a_b_tests']['created'] = [
    'title' => t('Created'),
    'help' => t('When the test was created'),
    'field' => [
      'id' => 'date',
    ],
    'sort' => [
      'id' => 'date',
    ],
    'filter' => [
      'id' => 'date',
    ],
  ];

  // test updated by
  $data['simple_a_b_tests']['updated_by'] = [
    'title' => t('Updated by'),
    'help' => t('The user that last updated the test'),
    'field' => [
      'id' => 'numeric',
    ],
    'sort' => [
      'id' => 'standard',
    ],
    'filter' => [
      'id' => 'numeric',
    ],
    'argument' => [
      'id' => 'numeric',
    ],
    'relationship' => [
      'title' => t('Updated by user'),
      'help' => t('The user that last updated the test'),
      'base' => 'users_field_data',
      'base field' => 'uid',
      'id' => 'standard',
    ],
  ];

  // test updated time
  $data['simple_a_b_tests']['updated'] = [
    'title' => t('Updated'),
    'help' => t('When the test was updated'),
    'field' => [
      'id' => 'date',
    ],
    'sort' => [
      'id' => 'date',
    ],
    'filter' => [
      'id' => 'date',
    ],
  ];

  return $data;
}
